(rule (target "simple.err.oracle") (mode fallback) (action (write-file "simple.err.oracle" "")))
(rule (target "simple.res.oracle") (mode fallback) (action (write-file "simple.res.oracle" "")))
(rule (target "simple.out.c") (mode fallback) (action (write-file "simple.out.c" "")))
(rule (target "sum.err.oracle") (mode fallback) (action (write-file "sum.err.oracle" "")))
(rule (target "sum.res.oracle") (mode fallback) (action (write-file "sum.res.oracle" "")))
(rule (target "sum.out.c") (mode fallback) (action (write-file "sum.out.c" "")))
(rule (target "old_predicate.err.oracle") (mode fallback) (action (write-file "old_predicate.err.oracle" "")))
(rule (target "old_predicate.res.oracle") (mode fallback) (action (write-file "old_predicate.res.oracle" "")))
(rule (target "old_predicate.out.c") (mode fallback) (action (write-file "old_predicate.out.c" "")))
(rule (target "saida_harness_old_predicate.c") (mode fallback) (action (write-file "saida_harness_old_predicate.c" "")))
(rule (target "func_arguments.err.oracle") (mode fallback) (action (write-file "func_arguments.err.oracle" "")))
(rule (target "func_arguments.res.oracle") (mode fallback) (action (write-file "func_arguments.res.oracle" "")))
(rule (target "func_arguments.out.c") (mode fallback) (action (write-file "func_arguments.out.c" "")))
(rule (target "saida_harness_func_arguments.c") (mode fallback) (action (write-file "saida_harness_func_arguments.c" "")))
(rule (target "simple_ptr.err.oracle") (mode fallback) (action (write-file "simple_ptr.err.oracle" "")))
(rule (target "simple_ptr.res.oracle") (mode fallback) (action (write-file "simple_ptr.res.oracle" "")))
(rule (target "simple_ptr.out.c") (mode fallback) (action (write-file "simple_ptr.out.c" "")))
(rule (target "bool_const.err.oracle") (mode fallback) (action (write-file "bool_const.err.oracle" "")))
(rule (target "bool_const.res.oracle") (mode fallback) (action (write-file "bool_const.res.oracle" "")))
(rule (target "bool_const.out.c") (mode fallback) (action (write-file "bool_const.out.c" "")))
(rule (target "saida_harness_bool_const.c") (mode fallback) (action (write-file "saida_harness_bool_const.c" "")))
(rule (target "ternary_term.err.oracle") (mode fallback) (action (write-file "ternary_term.err.oracle" "")))
(rule (target "ternary_term.res.oracle") (mode fallback) (action (write-file "ternary_term.res.oracle" "")))
(rule (target "ternary_term.out.c") (mode fallback) (action (write-file "ternary_term.out.c" "")))
(rule (target "saida_harness_ternary_term.c") (mode fallback) (action (write-file "saida_harness_ternary_term.c" "")))
(rule (target "char_const.err.oracle") (mode fallback) (action (write-file "char_const.err.oracle" "")))
(rule (target "char_const.res.oracle") (mode fallback) (action (write-file "char_const.res.oracle" "")))
(rule (target "char_const.out.c") (mode fallback) (action (write-file "char_const.out.c" "")))
(rule (target "saida_harness_char_const.c") (mode fallback) (action (write-file "saida_harness_char_const.c" "")))
(rule (target "ternary_predicate.err.oracle") (mode fallback) (action (write-file "ternary_predicate.err.oracle" "")))
(rule (target "ternary_predicate.res.oracle") (mode fallback) (action (write-file "ternary_predicate.res.oracle" "")))
(rule (target "ternary_predicate.out.c") (mode fallback) (action (write-file "ternary_predicate.out.c" "")))
(rule (target "saida_harness_ternary_predicate.c") (mode fallback) (action (write-file "saida_harness_ternary_predicate.c" "")))

